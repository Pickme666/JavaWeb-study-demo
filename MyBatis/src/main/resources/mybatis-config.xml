<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

    <!--类型别名, 可以为Java类型设置一个缩写名字, 它仅用于XML配置，用于简化全限定类名的编写-->
    <typeAliases>
        <package name="com.pojo"/>
        <!--指定一个包名, 在xml配置com.pojo包下的类时, 可以免写全限定类名, 直接写类名即可-->
    </typeAliases>

    <!--MyBatis可以配置成适应多种环境, 可以将SQL映射应用于多种数据库之中-->
    <!--default 属性可以选择要使用的环境-->
    <environments default="development">

        <!--配置环境和数据库信息1-->
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <!--数据库连接信息-->
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql:///mybatis?useSSL=false"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>

        <!--配置环境和数据库信息2-->
        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <!--数据库连接信息-->
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql:///db1?useSSL=false"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>

    </environments>
    <mappers>
        <!--加载sql映射文件-->
        <!--<mapper resource="com/mapper/UserMapper.xml"/>-->

        <!--如果Mapper接口名称和sql映射文件名称相同, 并在同一目录下, 可以使用包扫描的方式简化sql映射文件的加载-->
        <package name="com.mapper"/>
    </mappers>
</configuration>

<!--MyBatis 的核心配置文件包含了MyBatis行为的设置和属性信息。
    配置文档的顶层结构如下：
        configuration（配置）
        properties（属性）
        settings（设置）
        typeAliases（类型别名）
        typeHandlers（类型处理器）
        objectFactory（对象工厂）
        plugins（插件）
        environments（环境配置）
            environment（环境变量）
                transactionManager（事务管理器）
                dataSource（数据源）
        databaseIdProvider（数据库厂商标识）
        mappers（映射器）
-->
